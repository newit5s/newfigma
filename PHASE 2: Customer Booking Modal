# PHASE 2: Customer Booking Modal

## 🎯 Objective
Create a modern 3-step booking modal widget for customers based on Figma design, keeping all existing AJAX functionality intact.

## 📋 Dependencies
- **Phase 1**: Design system CSS variables and base components
- **Existing Backend**: WordPress AJAX endpoints (maintain compatibility)

## 📦 Deliverables
1. **booking-modal.css** - Modal-specific styles
2. **booking-widget.js** - Interactive booking logic
3. **booking-modal.php** - HTML template structure
4. **class-modern-booking-widget.php** - WordPress integration

## 🎨 Design Specifications

### Modal Layout (Figma Reference)
```
┌─────────────────────────────────────┐
│ [X] Reserve a Table            [×]  │ ← Header
├─────────────────────────────────────┤
│     ①━━━━━②━━━━━③                   │ ← Progress
│   Date    Time   Details             │
├─────────────────────────────────────┤
│                                     │
│        [Step Content Area]          │ ← Body
│                                     │
├─────────────────────────────────────┤
│  [Back]              [Continue] →   │ ← Footer
└─────────────────────────────────────┘
```

## 🔄 3-Step Flow

### Step 1: Date & Location Selection
```html
<div class="rb-booking-step" data-step="1">
  <div class="rb-step-header">
    <h3>Select Date & Location</h3>
    <p>Choose your preferred dining details</p>
  </div>
  
  <div class="rb-form-row">
    <div class="rb-form-group">
      <label class="rb-label">Location</label>
      <select class="rb-select" id="location-select">
        <option value="">Choose location</option>
        <!-- Dynamic options from AJAX -->
      </select>
    </div>
    
    <div class="rb-form-group">
      <label class="rb-label">Party Size</label>
      <select class="rb-select" id="party-size">
        <option value="1">1 Person</option>
        <option value="2">2 People</option>
        <option value="4">4 People</option>
        <option value="6">6 People</option>
        <option value="8">8+ People</option>
      </select>
    </div>
  </div>
  
  <div class="rb-form-group">
    <label class="rb-label">Date</label>
    <input type="date" class="rb-input" id="booking-date" min="<?php echo date('Y-m-d'); ?>">
  </div>
</div>
```

### Step 2: Time Selection
```html
<div class="rb-booking-step" data-step="2">
  <div class="rb-step-header">
    <h3>Select Time</h3>
    <p>Available time slots for <span id="selected-date-display"></span></p>
  </div>
  
  <div class="rb-time-slots-grid" id="time-slots">
    <!-- Dynamic time slots via AJAX -->
    <div class="rb-time-slot" data-time="17:00">
      <span class="rb-time">5:00 PM</span>
      <span class="rb-availability">Available</span>
    </div>
    <div class="rb-time-slot rb-unavailable" data-time="18:00">
      <span class="rb-time">6:00 PM</span>
      <span class="rb-availability">Fully Booked</span>
    </div>
  </div>
  
  <div class="rb-alternative-times" id="alternative-times" style="display: none;">
    <h4>Alternative Times</h4>
    <div class="rb-alt-slots">
      <!-- Alternative suggestions -->
    </div>
  </div>
</div>
```

### Step 3: Customer Details
```html
<div class="rb-booking-step" data-step="3">
  <div class="rb-step-header">
    <h3>Your Details</h3>
    <p>Complete your reservation</p>
  </div>
  
  <div class="rb-form-row">
    <div class="rb-form-group">
      <label class="rb-label rb-required">First Name</label>
      <input type="text" class="rb-input" id="first-name" required>
      <span class="rb-error-message"></span>
    </div>
    
    <div class="rb-form-group">
      <label class="rb-label rb-required">Last Name</label>
      <input type="text" class="rb-input" id="last-name" required>
      <span class="rb-error-message"></span>
    </div>
  </div>
  
  <div class="rb-form-row">
    <div class="rb-form-group">
      <label class="rb-label rb-required">Email</label>
      <input type="email" class="rb-input" id="email" required>
      <span class="rb-error-message"></span>
    </div>
    
    <div class="rb-form-group">
      <label class="rb-label rb-required">Phone</label>
      <input type="tel" class="rb-input" id="phone" required>
      <span class="rb-error-message"></span>
    </div>
  </div>
  
  <div class="rb-form-group">
    <label class="rb-label">Special Requests</label>
    <textarea class="rb-textarea" id="special-requests" rows="3" 
              placeholder="Allergies, celebrations, accessibility needs..."></textarea>
  </div>
  
  <div class="rb-booking-summary">
    <h4>Booking Summary</h4>
    <div class="rb-summary-item">
      <span>Location:</span> <span id="summary-location"></span>
    </div>
    <div class="rb-summary-item">
      <span>Date:</span> <span id="summary-date"></span>
    </div>
    <div class="rb-summary-item">
      <span>Time:</span> <span id="summary-time"></span>
    </div>
    <div class="rb-summary-item">
      <span>Party Size:</span> <span id="summary-party"></span>
    </div>
  </div>
</div>
```

## 💻 JavaScript Requirements

### Core Widget Class
```javascript
class ModernBookingWidget {
  constructor(options = {}) {
    this.options = {
      triggerId: 'book-table-btn',
      ajaxUrl: rb_booking_ajax.ajax_url,
      nonce: rb_booking_ajax.nonce,
      ...options
    };
    
    this.currentStep = 1;
    this.bookingData = {};
    this.modal = null;
    
    this.init();
  }
  
  init() {
    this.createModal();
    this.bindEvents();
    this.loadLocations();
  }
  
  // Modal Management
  openModal() { }
  closeModal() { }
  
  // Step Navigation
  nextStep() { }
  prevStep() { }
  goToStep(step) { }
  
  // Data Loading
  loadLocations() { }
  loadTimeSlots() { }
  
  // Form Handling
  validateStep(step) { }
  submitBooking() { }
}
```

### AJAX Integration (Keep Existing Endpoints)
```javascript
// Use existing WordPress AJAX endpoints
async loadTimeSlots(locationId, date, partySize) {
  const response = await fetch(this.options.ajaxUrl, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded',
    },
    body: new URLSearchParams({
      action: 'rb_check_availability',  // Existing endpoint
      nonce: this.options.nonce,
      location_id: locationId,
      date: date,
      party_size: partySize
    })
  });
  
  const data = await response.json();
  this.renderTimeSlots(data.available_slots);
}

async submitBooking(bookingData) {
  const response = await fetch(this.options.ajaxUrl, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded',
    },
    body: new URLSearchParams({
      action: 'rb_create_booking',  // Existing endpoint
      nonce: this.options.nonce,
      ...bookingData
    })
  });
  
  return await response.json();
}
```

## 🎨 CSS Specifications

### Modal Styles
```css
/* Modal Overlay */
.rb-booking-modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  backdrop-filter: blur(4px);
  z-index: 9999;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: var(--rb-space-4);
  opacity: 0;
  visibility: hidden;
  transition: all var(--rb-transition-base);
}

.rb-booking-modal-overlay.rb-active {
  opacity: 1;
  visibility: visible;
}

/* Modal Container */
.rb-booking-modal {
  background: var(--rb-bg-primary);
  border-radius: var(--rb-radius-lg);
  box-shadow: var(--rb-shadow-xl);
  width: 100%;
  max-width: 500px;
  max-height: 90vh;
  overflow: hidden;
  transform: scale(0.95) translateY(20px);
  transition: transform var(--rb-transition-base);
}

.rb-booking-modal-overlay.rb-active .rb-booking-modal {
  transform: scale(1) translateY(0);
}
```

### Progress Steps
```css
.rb-booking-progress {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: var(--rb-space-6);
  border-bottom: 1px solid var(--rb-border);
}

.rb-progress-step {
  display: flex;
  flex-direction: column;
  align-items: center;
  position: relative;
  flex: 1;
  max-width: 120px;
}

.rb-progress-number {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background: var(--rb-gray-200);
  color: var(--rb-gray-500);
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: var(--rb-font-semibold);
  margin-bottom: var(--rb-space-2);
  transition: all var(--rb-transition-base);
}

.rb-progress-step.rb-active .rb-progress-number {
  background: var(--rb-primary-500);
  color: white;
}

.rb-progress-step.rb-completed .rb-progress-number {
  background: var(--rb-success);
  color: white;
}
```

### Time Slots Grid
```css
.rb-time-slots-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
  gap: var(--rb-space-3);
  margin-top: var(--rb-space-4);
}

.rb-time-slot {
  background: var(--rb-bg-secondary);
  border: 2px solid var(--rb-border);
  border-radius: var(--rb-radius);
  padding: var(--rb-space-4);
  text-align: center;
  cursor: pointer;
  transition: all var(--rb-transition-fast);
}

.rb-time-slot:hover {
  border-color: var(--rb-primary-500);
  transform: translateY(-2px);
}

.rb-time-slot.rb-selected {
  background: var(--rb-primary-500);
  border-color: var(--rb-primary-500);
  color: white;
}

.rb-time-slot.rb-unavailable {
  background: var(--rb-gray-100);
  color: var(--rb-gray-400);
  cursor: not-allowed;
  opacity: 0.6;
}

.rb-time-slot .rb-time {
  display: block;
  font-weight: var(--rb-font-semibold);
  font-size: var(--rb-text-lg);
}

.rb-time-slot .rb-availability {
  display: block;
  font-size: var(--rb-text-xs);
  margin-top: var(--rb-space-1);
}
```

### Booking Summary
```css
.rb-booking-summary {
  background: var(--rb-bg-secondary);
  border-radius: var(--rb-radius);
  padding: var(--rb-space-4);
  margin-top: var(--rb-space-6);
}

.rb-booking-summary h4 {
  margin: 0 0 var(--rb-space-3) 0;
  color: var(--rb-text-primary);
  font-weight: var(--rb-font-semibold);
}

.rb-summary-item {
  display: flex;
  justify-content: space-between;
  padding: var(--rb-space-2) 0;
  border-bottom: 1px solid var(--rb-border);
}

.rb-summary-item:last-child {
  border-bottom: none;
}
```

## 📱 Responsive Behavior

### Mobile Optimizations
```css
@media (max-width: 640px) {
  .rb-booking-modal-overlay {
    padding: var(--rb-space-2);
    align-items: flex-end;
  }
  
  .rb-booking-modal {
    max-width: 100%;
    border-radius: var(--rb-radius-lg) var(--rb-radius-lg) 0 0;
    max-height: 95vh;
  }
  
  .rb-time-slots-grid {
    grid-template-columns: repeat(2, 1fr);
  }
  
  .rb-form-row {
    flex-direction: column;
  }
  
  .rb-booking-progress {
    padding: var(--rb-space-4);
  }
  
  .rb-progress-step {
    max-width: 80px;
  }
  
  .rb-progress-number {
    width: 32px;
    height: 32px;
    font-size: var(--rb-text-sm);
  }
}
```

## ⚡ Animation & Interactions

### Step Transitions
```css
.rb-booking-step {
  display: none;
  opacity: 0;
  transform: translateX(20px);
}

.rb-booking-step.rb-active {
  display: block;
  animation: slideInStep 0.3s ease-out forwards;
}

@keyframes slideInStep {
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.rb-booking-step.rb-exiting {
  animation: slideOutStep 0.2s ease-in forwards;
}

@keyframes slideOutStep {
  to {
    opacity: 0;
    transform: translateX(-20px);
  }
}
```

### Loading States
```css
.rb-time-slots-loading {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 120px;
}

.rb-loading-spinner {
  width: 32px;
  height: 32px;
  border: 3px solid var(--rb-gray-200);
  border-top: 3px solid var(--rb-primary-500);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.rb-btn.rb-loading {
  position: relative;
  color: transparent;
}

.rb-btn.rb-loading::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 16px;
  height: 16px;
  margin: -8px 0 0 -8px;
  border: 2px solid transparent;
  border-top: 2px solid currentColor;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}
```

## 🔧 WordPress Integration

### Shortcode Integration
```php
// public/class-modern-booking-widget.php
class RB_Modern_Booking_Widget {
    
    public function __construct() {
        add_shortcode('modern_restaurant_booking', array($this, 'render_booking_widget'));
        add_action('wp_enqueue_scripts', array($this, 'enqueue_assets'));
    }
    
    public function render_booking_widget($atts) {
        $atts = shortcode_atts(array(
            'theme' => 'light',
            'location' => '',
            'button_text' => 'Book a Table'
        ), $atts);
        
        ob_start();
        include plugin_dir_path(__FILE__) . 'partials/booking-modal.php';
        return ob_get_clean();
    }
    
    public function enqueue_assets() {
        if (has_shortcode(get_post()->post_content, 'modern_restaurant_booking')) {
            wp_enqueue_style('rb-booking-modal', 
                plugin_dir_url(__FILE__) . '../assets/css/booking-modal.css',
                array('rb-design-system'), // Dependency on Phase 1
                '1.0.0'
            );
            
            wp_enqueue_script('rb-booking-widget',
                plugin_dir_url(__FILE__) . '../assets/js/booking-widget.js',
                array('jquery'),
                '1.0.0',
                true
            );
            
            wp_localize_script('rb-booking-widget', 'rbBookingAjax', array(
                'ajax_url' => admin_url('admin-ajax.php'),
                'nonce' => wp_create_nonce('rb_booking_nonce'),
                'strings' => array(
                    'loading' => __('Loading...', 'restaurant-booking'),
                    'error' => __('Something went wrong. Please try again.', 'restaurant-booking'),
                    'success' => __('Booking confirmed! Check your email.', 'restaurant-booking')
                )
            ));
        }
    }
}
```

### Template Structure
```php
<!-- public/partials/booking-modal.php -->
<div class="rb-booking-trigger">
    <button class="rb-btn rb-btn-primary rb-btn-lg" id="rb-open-booking">
        <?php echo esc_html($button_text); ?>
    </button>
</div>

<div class="rb-booking-modal-overlay" id="rb-booking-modal">
    <div class="rb-booking-modal">
        <!-- Header -->
        <div class="rb-booking-header">
            <h2 class="rb-booking-title"><?php _e('Reserve a Table', 'restaurant-booking'); ?></h2>
            <button class="rb-modal-close" id="rb-close-booking">&times;</button>
        </div>
        
        <!-- Progress Steps -->
        <div class="rb-booking-progress">
            <div class="rb-progress-step rb-active" data-step="1">
                <div class="rb-progress-number">1</div>
                <span class="rb-progress-label"><?php _e('Date', 'restaurant-booking'); ?></span>
            </div>
            <div class="rb-progress-step" data-step="2">
                <div class="rb-progress-number">2</div>
                <span class="rb-progress-label"><?php _e('Time', 'restaurant-booking'); ?></span>
            </div>
            <div class="rb-progress-step" data-step="3">
                <div class="rb-progress-number">3</div>
                <span class="rb-progress-label"><?php _e('Details', 'restaurant-booking'); ?></span>
            </div>
        </div>
        
        <!-- Body -->
        <div class="rb-booking-body">
            <?php include 'booking-step-1.php'; ?>
            <?php include 'booking-step-2.php'; ?>
            <?php include 'booking-step-3.php'; ?>
        </div>
        
        <!-- Footer -->
        <div class="rb-booking-footer">
            <button class="rb-btn rb-btn-secondary" id="rb-prev-step" style="display: none;">
                <?php _e('Back', 'restaurant-booking'); ?>
            </button>
            <button class="rb-btn rb-btn-primary" id="rb-next-step">
                <?php _e('Continue', 'restaurant-booking'); ?>
            </button>
        </div>
    </div>
</div>
```

## 🧪 Testing Requirements

### Functional Testing
1. **Modal Behavior**
   - [ ] Opens on trigger click
   - [ ] Closes on X button, backdrop click, ESC key
   - [ ] Proper z-index layering
   - [ ] Body scroll lock when open

2. **Step Navigation**
   - [ ] Progress indicator updates correctly
   - [ ] Next/Back buttons show/hide appropriately
   - [ ] Step validation prevents invalid progression
   - [ ] Data persists between steps

3. **AJAX Integration**
   - [ ] Locations load on modal open
   - [ ] Time slots update on date/location change
   - [ ] Alternative times show when main times unavailable
   - [ ] Booking submission works with existing backend

4. **Form Validation**
   - [ ] Required fields marked with *
   - [ ] Real-time validation on blur
   - [ ] Error messages clear and helpful
   - [ ] Phone/email format validation

5. **Responsive Behavior**
   - [ ] Mobile modal slides from bottom
   - [ ] Touch-friendly tap targets
   - [ ] Proper keyboard navigation
   - [ ] Screen reader accessibility

## 🎯 Success Criteria

### Visual Requirements
- [ ] Matches Figma design aesthetic
- [ ] Smooth animations and transitions
- [ ] Consistent with Phase 1 design system
- [ ] Professional, modern appearance

### Functional Requirements
- [ ] All existing booking logic preserved
- [ ] Same AJAX endpoints used
- [ ] Email confirmation system intact
- [ ] Multi-language support maintained

### Performance Requirements
- [ ] Modal opens in <200ms
- [ ] Time slots load in <1s
- [ ] No layout shift during loading
- [ ] Smooth 60fps animations

### Accessibility Requirements
- [ ] WCAG 2.1 AA compliance
- [ ] Keyboard navigation support
- [ ] Screen reader friendly
- [ ] High contrast mode support

## 📁 Expected File Outputs

```
assets/css/booking-modal.css           # Complete modal styles
assets/js/booking-widget.js            # Widget functionality
public/class-modern-booking-widget.php # WordPress integration
public/partials/
├── booking-modal.php                  # Main modal template
├── booking-step-1.php                 # Date/location step
├── booking-step-2.php                 # Time selection step
└── booking-step-3.php                 # Customer details step
```

## 🔗 Integration Notes

- Must work with existing `includes/class-ajax.php` endpoints
- Preserve all `RB_Booking` class functionality
- Maintain compatibility with current database schema
- Support existing email/notification system
- Work with current multi-language setup

Focus on creating a beautiful, modern user experience while keeping all business logic exactly as-is!
